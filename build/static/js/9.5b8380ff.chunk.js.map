{"version":3,"sources":["component/Music.js","component/Algorithms/music/MP3_To_WAV.js"],"names":["Music","useState","fr","to","load","setLoading","success","setSuccess","file","setFile","from","type","setType","fileType","e","target","name","value","className","onChange","defaultValue","map","i","k","key","accept","files","max","onClick","preventDefault","alert","size","console","log","reader","FileReader","readAsDataURL","onload","result","ffmpeg","error","mp3_to_wav","setTimeout","id","style","display","s","toLowerCase","href"],"mappings":"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","file":"static/js/9.5b8380ff.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { mp3_to_wav } from \"./Algorithms/music/MP3_To_WAV\";\n\nconst Music = () => {\n  // eslint-disable-next-line\n  const [fr, setFr] = useState([\"MP3\", \"WAV\"]); // eslint-disable-next-line\n  const [to, setTo] = useState([\"WAV\", \"MP3\"]);\n  const [load, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [file, setFile] = useState(null);\n  const [type, setType] = useState({\n    from: \"\",\n    to: \"\"\n  });\n  // const [error, setError] = useState(\"\");\n  const showName = e => {\n    setFile(e.target.files[0]);\n  };\n  const fileType = e => {\n    //console.log(e.target.value);\n    setType({\n      ...type,\n      [e.target.name]: e.target.value\n    });\n  };\n  const submit = e => {\n    e.preventDefault();\n    if (file === null) {\n      alert(\"Please first select file and types\");\n      return false;\n    }\n    if (file.size > 112582912) {\n      alert(\"File Size must be less then 11mb.\");\n      return false;\n    }\n    if (type.from === \"\" || type.from === \"Original File Types\") {\n      console.log(type);\n      alert(\"'From' file type is not selected!\");\n      return false;\n    }\n    if (type.to === \"\" || type.to === \"New File Types\") {\n      alert(\"'To' file type is not selected\");\n      return false;\n    }\n    if (type.from === type.to) {\n      alert(\"'From' and 'To' is same!\");\n      return false;\n    }\n    setSuccess(false);\n    setLoading(true);\n    // selecting algorithms accordingly\n    if (type.from === \"MP3\") {\n      let reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = function() {\n        const dataURL = reader.result;\n        mp3_to_wav(dataURL);\n      };\n    }\n    if (type.from === \"WAV\") {\n      let reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = function() {\n        //const dataURL = reader.result;\n        // OggToMp3Convertor(dataURL);\n      };\n    }\n    // showing loading just for fun\n    setTimeout(() => {\n      setLoading(false);\n      setSuccess(true);\n    }, 2000);\n  };\n\n  //handle download accordingly\n  const download = () => {\n    if (type.from === \"MP3\") {\n      let s;\n      if (type.to === \"WAV\") {\n        s = \"MP3\";\n      }\n      if (type.to === \"WAV\") {\n        s = \"WAV\";\n      } else {\n        s = type.to;\n      }\n      console.log(s.toLowerCase());\n      //downloadFromPng(file.name.split(\".\")[0], s.toLowerCase(), setSuccess); //passing file name\n    }\n  };\n  return (\n    <section className=\"container\">\n      <div className=\"level\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <p className=\"subtitle is-5\">\n              <strong>From</strong>\n            </p>\n          </div>\n          <div className=\"level-item\">\n            <div className=\"field\">\n              <div className=\"control has-icons-left\">\n                <div className=\"select is-rounded\">\n                  <select name=\"from\" onChange={fileType}>\n                    <option defaultValue>Original File Types</option>\n                    {fr.map((i, k) => {\n                      return <option key={k}>{i}</option>;\n                    })}\n                  </select>\n                </div>\n                <div className=\"icon is-small is-left\">\n                  <i className=\"fas fa-globe\"></i>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"level-right\">\n          <div className=\"level-item\">\n            <p className=\"subtitle is-5\">\n              <strong>To</strong>\n            </p>\n          </div>\n          <div className=\"field shift\">\n            <div className=\"control has-icons-left\">\n              <div className=\"select is-rounded\">\n                <select name=\"to\" onChange={fileType}>\n                  <option defaultValue>New File Types</option>\n                  {to.map((i, k) => {\n                    return <option key={k}>{i}</option>;\n                  })}\n                </select>\n              </div>\n              <div className=\"icon is-small is-left\">\n                <i className=\"fas fa-globe\"></i>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"level is-mobile\">\n        <div className=\"level-item has-text-centered\">\n          <div className=\"file is-dark has-name is-boxed\">\n            <label className=\"file-label\">\n              <input\n                className=\"file-input\"\n                type=\"file\"\n                name=\"image\"\n                accept=\"image/*\"\n                onChange={showName}\n              />\n              <span className=\"file-cta\">\n                <span className=\"file-icon\">\n                  <i className=\"fas fa-upload\"></i>\n                </span>\n                <span className=\"file-label\">Choose a fileâ€¦</span>\n              </span>\n              <span className=\"file-name\">\n                {file === null ? null : file.name}\n              </span>\n            </label>\n          </div>\n        </div>\n      </div>\n      <div className=\"level has-centered\">\n        {load ? (\n          <div className=\"columns level-item has-centered\">\n            <div className=\"column is-two-thirds\">\n              <progress className=\"progress is-dark\" max=\"100\">\n                30%\n              </progress>\n            </div>\n          </div>\n        ) : (\n          <div className=\"level-item has-centered\">\n            <button className=\"button is-dark is-rounded\" onClick={submit}>\n              <span className=\"icon\">\n                <i className=\"fas fa-dice-d20\"></i>\n              </span>\n              <span>Convert</span>\n            </button>\n          </div>\n        )}\n      </div>\n      <canvas\n        className=\"container has-centered\"\n        id=\"canvas\"\n        style={{ display: \"none\" }}\n      ></canvas>\n      <div className=\"has-centered\">\n        {success ? (\n          <div className=\"has-centered\">\n            <div className=\"container level-item has-centered\">\n              <p>Your converted file is ready to download!</p>\n            </div>\n            <br />\n            <div className=\"container level-item has-centered\">\n              <a\n                onClick={download}\n                id=\"downloader\"\n                href=\"#i\"\n                className=\"button is-dark is-outlined\"\n              >\n                <span className=\"icon is-small\">\n                  <i className=\"fas fa-download\"></i>\n                </span>\n              </a>\n            </div>\n          </div>\n        ) : null}\n      </div>\n      <br />\n    </section>\n  );\n};\n\nexport default Music;\n","import ffmpeg from \"ffmpeg\";\n\nexport const mp3_to_wav = file => {\n  try {\n    // var blob = new File([file], \"test.mp3\", {\n    //   type: \" audio/wav\"\n    // });\n    // console.log(blob);\n    ffmpeg();\n  } catch (error) {}\n};\n"],"sourceRoot":""}