{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","component/Compression.js","component/Algorithms/JPGCompressor.js","component/Algorithms/PNGCompressor.js","component/Algorithms/WEBPCompressor.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_slicedToArray","arr","Array","isArray","Symbol","iterator","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","err","TypeError","Compression","useState","file","setFile","success","setSuccess","load","setLoading","from","type","setType","className","name","onChange","e","defaultValue","accept","files","max","onClick","preventDefault","size","alert","toLowerCase","split","pop","reader","FileReader","readAsDataURL","onload","dataURL","ctx","document","getElementById","getContext","image","Image","canvas","width","window","innerWidth","height","innerHeight","drawImage","src","setTimeout","dataURI","toDataURL","replace","imgFileSize","Math","round","innerText","toFixed","JPGCompressor","result","PNGCompressor","WEBPCompressor","style","display","id","download","byteString","atob","mimeString","arrayBuffer","ArrayBuffer","_ia","Uint8Array","charCodeAt","dataView","DataView","blob","Blob","href","URL","createObjectURL","downloadJPG","downloadPNG","downloadWEBP"],"mappings":"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","file":"static/js/3.9bfd99eb.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React, { useState } from \"react\";\nimport { JPGCompressor, downloadJPG } from \"./Algorithms/JPGCompressor\";\nimport { PNGCompressor, downloadPNG } from \"./Algorithms/PNGCompressor\";\nimport { downloadWEBP, WEBPCompressor } from \"./Algorithms/WEBPCompressor\";\nconst Compression = () => {\n  const [file, setFile] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const [load, setLoading] = useState(false);\n  const [type, setType] = useState({\n    from: \"\"\n  });\n  const showName = e => {\n    setFile(e.target.files[0]);\n  };\n  const fileType = e => {\n    //console.log(e.target.value);\n    setType({\n      ...type,\n      [e.target.name]: e.target.value\n    });\n  };\n  const submit = e => {\n    e.preventDefault();\n    if (file === null) {\n      alert(\"Please first select file and types\");\n      return;\n    }\n    if (file.size > 112582912) {\n      alert(\"File Size must be less then 11mb.\");\n      return;\n    }\n    if (type.from === \"\" || type.from === \"Original File Types\") {\n      alert(\"'From' file type is not selected!\");\n      return;\n    }\n    if (type.from.toLowerCase() !== file.name.split(\".\").pop()) {\n      alert(\n        \"Mismatch in selected file type: \" +\n          file.name.split(\".\").pop() +\n          \" with 'From' Select box: \" +\n          type.from.toLowerCase()\n      );\n      return false;\n    }\n    if (type.from === \"JPG\" || type.from === \"JPEG\") {\n      let reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = function() {\n        const dataURL = reader.result;\n        JPGCompressor(dataURL);\n      };\n    }\n    if (type.from === \"PNG\") {\n      let reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = function() {\n        const dataURL = reader.result;\n        PNGCompressor(dataURL);\n      };\n    }\n    if (type.from === \"WEBP\") {\n      let reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = function() {\n        const dataURL = reader.result;\n        WEBPCompressor(dataURL);\n      };\n    }\n    setSuccess(false);\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n      setSuccess(true);\n    }, 3000);\n  };\n  //handle download accordingly\n  const download = () => {\n    if (type.from === \"JPG\" || type.from === \"JPEG\") {\n      downloadJPG(file.name.split(\".\")[0]); //passing file name\n    }\n    if (type.from === \"PNG\") {\n      downloadPNG(file.name.split(\".\")[0]); //passing file name\n    }\n    if (type.from === \"WEBP\") {\n      downloadWEBP(file.name.split(\".\")[0]); //passing file name\n    }\n  };\n  return (\n    <section className=\"container\">\n      <div className=\"level is-mobile\">\n        <div className=\"level-item has-text-centered\">\n          <div className=\"field\">\n            <div className=\"control has-icons-left\">\n              <div className=\"select is-rounded\">\n                <select name=\"from\" onChange={fileType}>\n                  <option defaultValue>Original File Types</option>\n                  <option>PDF</option>\n                  <option>PNG</option>\n                  <option>JPG</option>\n                  <option>JPEG</option>\n                  <option>WEBP</option>\n                </select>\n              </div>\n              <div className=\"icon is-small is-left\">\n                <i className=\"fas fa-globe\"></i>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"level is-mobile\">\n        <div className=\"level-item has-text-centered\">\n          <div className=\"file is-dark has-name is-boxed\">\n            <label className=\"file-label\">\n              <input\n                className=\"file-input\"\n                type=\"file\"\n                name=\"image\"\n                accept=\"image/*\"\n                onChange={showName}\n              />\n              <span className=\"file-cta\">\n                <span className=\"file-icon\">\n                  <i className=\"fas fa-upload\"></i>\n                </span>\n                <span className=\"file-label\">Choose a file…</span>\n              </span>\n              <span className=\"file-name\">\n                {file === null ? null : file.name}\n              </span>\n            </label>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"level has-centered\">\n        {load ? (\n          <div className=\"columns level-item has-centered\">\n            <div className=\"column is-two-thirds\">\n              <progress className=\"progress is-dark\" max=\"100\">\n                30%\n              </progress>\n            </div>\n          </div>\n        ) : (\n          <div className=\"level-item has-centered\">\n            <button className=\"button is-dark is-rounded\" onClick={submit}>\n              <span className=\"icon\">\n                <i className=\"fas fa-dice-d20\"></i>\n              </span>\n              <span>Convert</span>\n            </button>\n          </div>\n        )}\n      </div>\n      <canvas\n        className=\"container has-centered\"\n        style={{ display: \"none\" }}\n        id=\"jpgtopng\"\n      ></canvas>\n      <div className=\"has-centered\">\n        {success ? (\n          <div className=\"has-centered\">\n            <div className=\"container level-item has-centered\">\n              <p>Your converted file is ready to download!</p>\n            </div>\n            <div className=\"container level-item has-centered\">\n              <p id=\"size\"></p>\n            </div>\n            <br />\n            <div className=\"container level-item has-centered\">\n              <a\n                onClick={download}\n                id=\"downloader\"\n                href=\"#i\"\n                className=\"button is-dark is-outlined\"\n              >\n                <span className=\"icon is-small\">\n                  <i className=\"fas fa-download\"></i>\n                </span>\n              </a>\n            </div>\n          </div>\n        ) : null}\n      </div>\n      <hr />\n    </section>\n  );\n};\n\nexport default Compression;\n","/**\n * Algorithm for JPG Compressor\n */\nexport const JPGCompressor = dataURL => {\n  var canvas = document.getElementById(\"jpgtopng\");\n  var ctx = canvas.getContext(\"2d\");\n  var image = new Image();\n  ctx.canvas.width = window.innerWidth;\n  ctx.canvas.height = window.innerHeight;\n  image.onload = function() {\n    ctx.drawImage(image, 0, 0, window.innerWidth, window.innerHeight);\n  };\n  image.src = dataURL;\n  setTimeout(() => {\n    let dataURI = document\n      .getElementById(\"jpgtopng\")\n      .toDataURL(\"image/jpg\", 0.03)\n      .replace(/^data:image\\/[^;]/, \"data:application/octet-stream\");\n    var head = \"data:image/jpg;base64,\";\n    var imgFileSize =\n      Math.round(((dataURI.length - head.length) * 3) / 4) / 1024;\n    document.getElementById(\"size\").innerText =\n      \"File Size: \" + imgFileSize.toFixed(2) + \"kb\";\n  }, 3000);\n};\nexport const downloadJPG = name => {\n  //file name as argument\n  document.getElementById(\"downloader\").download = name + \".jpg\";\n  // converting data uri to blob aken form github gist\n  let dataURI = document\n    .getElementById(\"jpgtopng\")\n    .toDataURL(\"image/jpg\", 0.001)\n    .replace(/^data:image\\/[^;]/, \"data:application/octet-stream\");\n  let byteString = atob(dataURI.split(\",\")[1]);\n\n  // separate out the mime component\n  let mimeString = dataURI\n    .split(\",\")[0]\n    .split(\":\")[1]\n    .split(\";\")[0];\n\n  // write the bytes of the string to an ArrayBuffer\n  let arrayBuffer = new ArrayBuffer(byteString.length);\n  let _ia = new Uint8Array(arrayBuffer);\n  for (let i = 0; i < byteString.length; i++) {\n    _ia[i] = byteString.charCodeAt(i);\n  }\n\n  let dataView = new DataView(arrayBuffer);\n  let blob = new Blob([dataView], { type: mimeString });\n\n  document.getElementById(\"downloader\").href = URL.createObjectURL(blob);\n};\n","/**\n * Algorithm for JPG Compressor\n */\nexport const PNGCompressor = dataURL => {\n  var canvas = document.getElementById(\"jpgtopng\");\n  var ctx = canvas.getContext(\"2d\");\n  var image = new Image();\n  ctx.canvas.width = window.innerWidth;\n  ctx.canvas.height = window.innerHeight;\n  image.onload = function() {\n    ctx.drawImage(image, 0, 0, window.innerWidth, window.innerHeight);\n  };\n  image.src = dataURL;\n  setTimeout(() => {\n    let dataURI = document\n      .getElementById(\"jpgtopng\")\n      .toDataURL(\"image/png\", 0.03)\n      .replace(/^data:image\\/[^;]/, \"data:application/octet-stream\");\n    var head = \"data:image/png;base64,\";\n    var imgFileSize =\n      Math.round(((dataURI.length - head.length) * 3) / 4) / 1024;\n    document.getElementById(\"size\").innerText =\n      \"File Size: \" + imgFileSize.toFixed(2) + \"kb\";\n  }, 3000);\n};\nexport const downloadPNG = name => {\n  //file name as argument\n  document.getElementById(\"downloader\").download = name + \".png\";\n  // converting data uri to blob aken form github gist\n  let dataURI = document\n    .getElementById(\"jpgtopng\")\n    .toDataURL(\"image/png\", 0.001)\n    .replace(/^data:image\\/[^;]/, \"data:application/octet-stream\");\n  let byteString = atob(dataURI.split(\",\")[1]);\n\n  // separate out the mime component\n  let mimeString = dataURI\n    .split(\",\")[0]\n    .split(\":\")[1]\n    .split(\";\")[0];\n\n  // write the bytes of the string to an ArrayBuffer\n  let arrayBuffer = new ArrayBuffer(byteString.length);\n  let _ia = new Uint8Array(arrayBuffer);\n  for (let i = 0; i < byteString.length; i++) {\n    _ia[i] = byteString.charCodeAt(i);\n  }\n\n  let dataView = new DataView(arrayBuffer);\n  let blob = new Blob([dataView], { type: mimeString });\n\n  document.getElementById(\"downloader\").href = URL.createObjectURL(blob);\n};\n","/**\n * Algorithm for JPG Compressor\n */\nexport const WEBPCompressor = dataURL => {\n  var canvas = document.getElementById(\"jpgtopng\");\n  var ctx = canvas.getContext(\"2d\");\n  var image = new Image();\n  ctx.canvas.width = window.innerWidth;\n  ctx.canvas.height = window.innerHeight;\n  image.onload = function() {\n    ctx.drawImage(image, 0, 0, window.innerWidth, window.innerHeight);\n  };\n  image.src = dataURL;\n  setTimeout(() => {\n    let dataURI = document\n      .getElementById(\"jpgtopng\")\n      .toDataURL(\"image/webp\", 0.03)\n      .replace(/^data:image\\/[^;]/, \"data:application/octet-stream\");\n    var head = \"data:image/webp;base64,\";\n    var imgFileSize =\n      Math.round(((dataURI.length - head.length) * 3) / 4) / 1024;\n    document.getElementById(\"size\").innerText =\n      \"File Size: \" + imgFileSize.toFixed(2) + \"kb\";\n  }, 3000);\n};\nexport const downloadWEBP = name => {\n  //file name as argument\n  document.getElementById(\"downloader\").download = name + \".webp\";\n  // converting data uri to blob aken form github gist\n  let dataURI = document\n    .getElementById(\"jpgtopng\")\n    .toDataURL(\"image/webp\", 0.7)\n    .replace(/^data:image\\/[^;]/, \"data:application/octet-stream\");\n  let byteString = atob(dataURI.split(\",\")[1]);\n\n  // separate out the mime component\n  let mimeString = dataURI\n    .split(\",\")[0]\n    .split(\":\")[1]\n    .split(\";\")[0];\n\n  // write the bytes of the string to an ArrayBuffer\n  let arrayBuffer = new ArrayBuffer(byteString.length);\n  let _ia = new Uint8Array(arrayBuffer);\n  for (let i = 0; i < byteString.length; i++) {\n    _ia[i] = byteString.charCodeAt(i);\n  }\n\n  let dataView = new DataView(arrayBuffer);\n  let blob = new Blob([dataView], { type: mimeString });\n\n  document.getElementById(\"downloader\").href = URL.createObjectURL(blob);\n};\n"],"sourceRoot":""}