{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","component/Document.js","component/Algorithms/docs/DOC_To_PDF.js","component/Algorithms/docs/HTML_To_Other.js","component/Algorithms/docs/TXT_To_Other.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_slicedToArray","arr","Array","isArray","Symbol","iterator","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","err","TypeError","Document","useState","fr","to","load","setLoading","success","setSuccess","file","setFile","from","type","setType","fileType","e","name","className","onChange","defaultValue","map","k","style","color","accept","files","max","onClick","preventDefault","size","console","log","alert","reader","FileReader","readAsBinaryString","onloadend","result","doc_to_pdf","setTimeout","id","readAsText","dataURI","encodeURIComponent","fileDownload","document","createElement","body","appendChild","href","download","split","click","removeChild","downloadFromHtml_To_Doc","downloadFromHtml_To_Pdf","downloadFromTxt_To_Doc","downloadFromTxt_To_Pdf"],"mappings":"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","file":"static/js/5.67464d92.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React, { useState } from \"react\";\nimport { PDF_To_Other } from \"./Algorithms/docs/PDF_To_Other\";\nimport { doc_to_pdf } from \"./Algorithms/docs/DOC_To_PDF\";\nimport {\n  html_to_other,\n  downloadFromHtml_To_Doc,\n  downloadFromHtml_To_Pdf\n} from \"./Algorithms/docs/HTML_To_Other\";\nimport {\n  txt_to_other,\n  downloadFromTxt_To_Doc,\n  downloadFromTxt_To_Pdf\n} from \"./Algorithms/docs/TXT_To_Other\";\n\nconst Document = () => {\n  // eslint-disable-next-line\n  const [fr, setFr] = useState([\"PDF\", \"DOCX\", \"PPT\", \"TXT\", \"HTML\"]); // eslint-disable-next-line\n  const [to, setTo] = useState([\"PDF\", \"DOCX\"]);\n  const [load, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [file, setFile] = useState(null);\n  const [type, setType] = useState({\n    from: \"\",\n    to: \"\"\n  });\n  const showName = e => {\n    setFile(e.target.files[0]);\n  };\n  const fileType = e => {\n    //console.log(e.target.value);\n    setType({\n      ...type,\n      [e.target.name]: e.target.value\n    });\n  };\n  const submit = e => {\n    e.preventDefault();\n    if (file === null) {\n      alert(\"Please first select file and types\");\n      return;\n    }\n    if (file.size > 112582912) {\n      alert(\"File Size must be less then 11mb.\");\n      return;\n    }\n    if (type.from === \"\") {\n      console.log(type);\n      alert(\"'From' file type is not selected!\");\n      return;\n    }\n    if (type.to === \"\") {\n      alert(\"'To' file type is not selected\");\n      return;\n    }\n    setSuccess(false);\n    setLoading(true);\n    if (type.from === \"PDF\") {\n      PDF_To_Other(file);\n      setSuccess(true);\n      setLoading(false);\n    }\n    if (type.from === \"DOCX\") {\n      doc_to_pdf(file);\n    }\n    if (type.from === \"HTML\") {\n      html_to_other(file);\n    }\n    if (type.from === \"TXT\") {\n      txt_to_other(file);\n    }\n    setTimeout(() => {\n      setLoading(false);\n      setSuccess(true);\n    }, 2000);\n  };\n  const download = () => {\n    if (type.from === \"HTML\") {\n      if (type.to === \"DOCX\") {\n        downloadFromHtml_To_Doc(file, setSuccess);\n      }\n      if (type.to === \"PDF\") {\n        downloadFromHtml_To_Pdf(file, setSuccess);\n      }\n    }\n    if (type.from === \"TXT\") {\n      if (type.to === \"DOCX\") {\n        downloadFromTxt_To_Doc(file, setSuccess);\n      }\n      if (type.to === \"PDF\") {\n        downloadFromTxt_To_Pdf(file, setSuccess);\n      }\n    }\n  };\n  return (\n    <section className=\"container\">\n      <div className=\"level\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <p className=\"subtitle is-5\">\n              <strong>From</strong>\n            </p>\n          </div>\n          <div className=\"level-item\">\n            <div className=\"field\">\n              <div className=\"control has-icons-left\">\n                <div className=\"select is-rounded\">\n                  <select name=\"from\" onChange={fileType}>\n                    <option defaultValue>Original File Types</option>\n                    {fr.map((i, k) => {\n                      return <option key={k}>{i}</option>;\n                    })}\n                  </select>\n                </div>\n                <div className=\"icon is-small is-left\">\n                  <i className=\"fas fa-globe\"></i>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"level-right\">\n          <div className=\"level-item\">\n            <p className=\"subtitle is-5\">\n              <strong>To</strong>\n            </p>\n          </div>\n          <div className=\"field shift\">\n            <div className=\"control has-icons-left\">\n              <div className=\"select is-rounded\">\n                <select name=\"to\" onChange={fileType}>\n                  <option defaultValue>New File Types</option>\n                  {to.map((i, k) => {\n                    return <option key={k}>{i}</option>;\n                  })}\n                </select>\n              </div>\n              <div className=\"icon is-small is-left\">\n                <i className=\"fas fa-globe\"></i>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <p style={{ color: \"red\" }}>\n        *Under Construction:Txt,html to other work fine,rest are under\n        development*\n      </p>\n      <div className=\"level is-mobile\">\n        <div className=\"level-item has-text-centered\">\n          <div className=\"file is-dark has-name is-boxed\">\n            <label className=\"file-label\">\n              <input\n                className=\"file-input\"\n                type=\"file\"\n                name=\"image\"\n                accept=\"image/*\"\n                onChange={showName}\n              />\n              <span className=\"file-cta\">\n                <span className=\"file-icon\">\n                  <i className=\"fas fa-upload\"></i>\n                </span>\n                <span className=\"file-label\">Choose a file…</span>\n              </span>\n              <span className=\"file-name\">\n                {file === null ? null : file.name}\n              </span>\n            </label>\n          </div>\n        </div>\n      </div>\n      <div className=\"level has-centered\">\n        {load ? (\n          <div className=\"columns level-item has-centered\">\n            <div className=\"column is-two-thirds\">\n              <progress className=\"progress is-dark\" max=\"100\">\n                30%\n              </progress>\n            </div>\n          </div>\n        ) : (\n          <div className=\"level-item has-centered\">\n            <button className=\"button is-dark is-rounded\" onClick={submit}>\n              <span className=\"icon\">\n                <i className=\"fas fa-dice-d20\"></i>\n              </span>\n              <span>Convert</span>\n            </button>\n          </div>\n        )}\n      </div>\n      <div className=\"has-centered\">\n        {success ? (\n          <div className=\"has-centered\">\n            <div className=\"container level-item has-centered\">\n              <p>Your converted file is ready to download!</p>\n            </div>\n            <br />\n            <div className=\"container level-item has-centered\">\n              <button\n                className=\"button is-dark is-outlined\"\n                id=\"dl\"\n                onClick={download}\n              >\n                <span className=\"icon is-small\">\n                  <i className=\"fas fa-download\"></i>\n                </span>\n              </button>\n            </div>\n          </div>\n        ) : null}\n      </div>\n      <br />\n    </section>\n  );\n};\n\nexport default Document;\n","export const doc_to_pdf = file => {\n  let reader = new FileReader();\n  reader.readAsBinaryString(file);\n  reader.onloadend = () => {\n    console.log(reader.result);\n  };\n};\n","export const html_to_other = file => {\n  console.log(\"time\");\n};\n\nexport const downloadFromHtml_To_Doc = (file, setSuccess) => {\n  let reader = new FileReader();\n  reader.readAsText(file);\n  reader.onloadend = () => {\n    let dataURI = reader.result;\n    var sourceHTML = dataURI + \"   <>By AIO </>\";\n    var source =\n      \"data:application/vnd.ms-word;charset=utf-8,\" +\n      encodeURIComponent(sourceHTML);\n    var fileDownload = document.createElement(\"a\");\n    document.body.appendChild(fileDownload);\n    fileDownload.href = source;\n    fileDownload.download = file.name.split(\".\")[0] + \".doc\";\n    fileDownload.click();\n    document.body.removeChild(fileDownload);\n    setSuccess(false);\n  };\n};\n\nexport const downloadFromHtml_To_Pdf = (file, setSuccess) => {\n  let reader = new FileReader();\n  reader.readAsText(file);\n  reader.onloadend = () => {\n    let dataURI = reader.result;\n    var sourceHTML = dataURI + \"   <>By AIO </>\";\n    var source =\n      \"data:application/pdf;charset=utf-8,\" + encodeURIComponent(sourceHTML);\n    var fileDownload = document.createElement(\"a\");\n    document.body.appendChild(fileDownload);\n    fileDownload.href = source;\n    fileDownload.download = file.name.split(\".\")[0] + \".pdf\";\n    fileDownload.click();\n    document.body.removeChild(fileDownload);\n\n    setSuccess(false);\n  };\n};\n","export const txt_to_other = file => {\n  console.log(\"time\");\n};\n\nexport const downloadFromTxt_To_Doc = (file, setSuccess) => {\n  let reader = new FileReader();\n  reader.readAsText(file);\n  reader.onloadend = () => {\n    let dataURI = reader.result;\n    var sourceHTML = dataURI + \"   <>By AIO </>\";\n    var source =\n      \"data:application/vnd.ms-word;charset=utf-8,\" +\n      encodeURIComponent(sourceHTML);\n    var fileDownload = document.createElement(\"a\");\n    document.body.appendChild(fileDownload);\n    fileDownload.href = source;\n    fileDownload.download = file.name.split(\".\")[0] + \".doc\";\n    fileDownload.click();\n    document.body.removeChild(fileDownload);\n    setSuccess(false);\n  };\n};\n\nexport const downloadFromTxt_To_Pdf = (file, setSuccess) => {\n  let reader = new FileReader();\n  reader.readAsText(file);\n  reader.onloadend = () => {\n    let dataURI = reader.result;\n    var sourceHTML = dataURI + \"   <>By AIO </>\";\n    var source =\n      \"data:application/pdf;charset=utf-8,\" + encodeURIComponent(sourceHTML);\n    var fileDownload = document.createElement(\"a\");\n    document.body.appendChild(fileDownload);\n    fileDownload.href = source;\n    fileDownload.download = file.name.split(\".\")[0] + \".pdf\";\n    fileDownload.click();\n    document.body.removeChild(fileDownload);\n\n    setSuccess(false);\n  };\n};\n"],"sourceRoot":""}