{"version":3,"sources":["component/Image.js","component/Document.js","component/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Image","useState","load","setLoading","success","setSuccess","name","setName","className","defaultValue","type","accept","onChange","e","console","log","target","files","max","onClick","preventDefault","setInterval","Document","Footer","style","color","href","NotFound","withRouter","location","pathname","to","aria-hidden","exact","path","component","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d97dc176.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nconst Image = () => {\n  const [load, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [name, setName] = useState(\"\");\n  const showName = e => {\n    console.log(e.target.files[0]);\n    setName(e.target.files[0].name);\n  };\n  const submit = e => {\n    e.preventDefault();\n    setLoading(true);\n    setInterval(() => {\n      setLoading(false);\n    }, 10000);\n    setSuccess(true);\n  };\n  return (\n    <section className=\"container\">\n      <div className=\"level\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <p className=\"subtitle is-5\">\n              <strong>From</strong>\n            </p>\n          </div>\n          <div className=\"level-item\">\n            <div className=\"field\">\n              <div className=\"control has-icons-left\">\n                <div className=\"select is-rounded\">\n                  <select>\n                    <option defaultValue>Original File Types</option>\n                    <option defaultValue>JPG</option>\n                    <option>PNG</option>\n                  </select>\n                </div>\n                <div className=\"icon is-small is-left\">\n                  <i className=\"fas fa-globe\"></i>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"level-right\">\n          <div className=\"level-item\">\n            <p className=\"subtitle is-5\">\n              <strong>To</strong>\n            </p>\n          </div>\n          <div className=\"field shift\">\n            <div className=\"control has-icons-left\">\n              <div className=\"select is-rounded\">\n                <select>\n                  <option defaultValue>New File Types</option>\n                  <option>JPG</option>\n                  <option>PNG</option>\n                </select>\n              </div>\n              <div className=\"icon is-small is-left\">\n                <i className=\"fas fa-globe\"></i>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"level is-mobile\">\n        <div className=\"level-item has-text-centered\">\n          <div className=\"file is-dark has-name is-boxed\">\n            <label className=\"file-label\">\n              <input\n                className=\"file-input\"\n                type=\"file\"\n                name=\"image\"\n                accept=\"image/*\"\n                onChange={showName}\n              />\n              <span className=\"file-cta\">\n                <span className=\"file-icon\">\n                  <i className=\"fas fa-upload\"></i>\n                </span>\n                <span className=\"file-label\">Choose a fileâ€¦</span>\n              </span>\n              <span className=\"file-name\">{name}</span>\n            </label>\n          </div>\n        </div>\n      </div>\n      <div className=\"level has-centered\">\n        {load ? (\n          <div className=\"level-item has-centered\">\n            <progress className=\"progress is-dark\" max=\"100\">\n              30%\n            </progress>\n          </div>\n        ) : (\n          <div className=\"level-item has-centered\">\n            <button className=\"button is-dark is-rounded\" onClick={submit}>\n              <span className=\"icon\">\n                <i className=\"fas fa-dice-d20\"></i>\n              </span>\n              <span>Convert</span>\n            </button>\n          </div>\n        )}\n      </div>\n      <div className=\"has-centered\">\n        {success ? (\n          <div className=\"has-centered\">\n            <div className=\"container level-item has-centered\">\n              <p>Your convert file is ready to download!</p>\n            </div>\n            <div className=\"container level-item has-centered\">\n              <button className=\"button is-dark is-outlined\">\n                <span className=\"icon is-small\">\n                  <i className=\"fas fa-download\"></i>\n                </span>\n              </button>\n            </div>\n          </div>\n        ) : null}\n      </div>\n      <br />\n    </section>\n  );\n};\n\nexport default Image;\n","import React, { useState } from \"react\";\n\nconst Document = () => {\n  const [load, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [name, setName] = useState(\"\");\n  const showName = e => {\n    console.log(e.target.files[0]);\n    setName(e.target.files[0].name);\n  };\n  const submit = e => {\n    e.preventDefault();\n    setLoading(true);\n    setInterval(() => {\n      setLoading(false);\n    }, 10000);\n    setSuccess(true);\n  };\n  return (\n    <section className=\"container\">\n      <div className=\"level\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <p className=\"subtitle is-5\">\n              <strong>From</strong>\n            </p>\n          </div>\n          <div className=\"level-item\">\n            <div className=\"field\">\n              <div className=\"control has-icons-left\">\n                <div className=\"select is-rounded\">\n                  <select>\n                    <option defaultValue>Original File Types</option>\n                    <option>PDF</option>\n                    <option>DOC</option>\n                    <option>PPT</option>\n                  </select>\n                </div>\n                <div className=\"icon is-small is-left\">\n                  <i className=\"fas fa-globe\"></i>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"level-right\">\n          <div className=\"level-item\">\n            <p className=\"subtitle is-5\">\n              <strong>To</strong>\n            </p>\n          </div>\n          <div className=\"field shift\">\n            <div className=\"control has-icons-left\">\n              <div className=\"select is-rounded\">\n                <select>\n                  <option defaultValue>New File Types</option>\n                  <option>PDF</option>\n                  <option>DOC</option>\n                  <option>PPT</option>\n                </select>\n              </div>\n              <div className=\"icon is-small is-left\">\n                <i className=\"fas fa-globe\"></i>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"level is-mobile\">\n        <div className=\"level-item has-text-centered\">\n          <div className=\"file is-dark has-name is-boxed\">\n            <label className=\"file-label\">\n              <input\n                className=\"file-input\"\n                type=\"file\"\n                name=\"image\"\n                accept=\"image/*\"\n                onChange={showName}\n              />\n              <span className=\"file-cta\">\n                <span className=\"file-icon\">\n                  <i className=\"fas fa-upload\"></i>\n                </span>\n                <span className=\"file-label\">Choose a fileâ€¦</span>\n              </span>\n              <span className=\"file-name\">{name}</span>\n            </label>\n          </div>\n        </div>\n      </div>\n      <div className=\"level has-centered\">\n        {load ? (\n          <div className=\"level-item has-centered\">\n            <progress className=\"progress is-dark\" max=\"100\">\n              30%\n            </progress>\n          </div>\n        ) : (\n          <div className=\"level-item has-centered\">\n            <button className=\"button is-dark is-rounded\" onClick={submit}>\n              <span className=\"icon\">\n                <i className=\"fas fa-dice-d20\"></i>\n              </span>\n              <span>Convert</span>\n            </button>\n          </div>\n        )}\n      </div>\n      <div className=\"has-centered\">\n        {success ? (\n          <div className=\"has-centered\">\n            <div className=\"container level-item has-centered\">\n              <p>Your convert file is ready to download!</p>\n            </div>\n            <div className=\"container level-item has-centered\">\n              <button className=\"button is-dark is-outlined\">\n                <span className=\"icon is-small\">\n                  <i className=\"fas fa-download\"></i>\n                </span>\n              </button>\n            </div>\n          </div>\n        ) : null}\n      </div>\n      <br />\n    </section>\n  );\n};\n\nexport default Document;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer container hero is-dark is-bold\">\n      <div className=\"content has-text-centered\">\n        <p>\n          <strong style={{ color: \"white\" }}>AIO (All in one)</strong> by{\" \"}\n          <a href=\"https://masterkn.tech\">MasterKN48</a>.\n          <br />\n          The source code is available <a href=\"#bulma\">Github</a>. <br />\n          The website use <a href=\"https://bulma.io/\">Bulma CSS</a>.\n        </p>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport { withRouter, NavLink, Switch, Route } from \"react-router-dom\";\nimport Image from \"./component/Image\";\nimport Document from \"./component/Document\";\nimport Footer from \"./component/Footer\";\n\nconst NotFound = () => (\n  <div className=\"container level has-centered\">\n    <h1>404</h1>\n    <br />\n    <br />\n  </div>\n);\nconst App = location => {\n  return (\n    <section className=\"container-fluid is-mobile\">\n      <div className=\"container\">\n        <section className=\"hero is-dark is-bold has-text-centered\">\n          <div className=\"hero-body\">\n            <div className=\"container\">\n              <h1 className=\"title\">AIO</h1>\n              <h2 className=\"subtitle\">Platform for file type conversion</h2>\n            </div>\n          </div>\n        </section>\n        <div className=\"tabs is-centered\">\n          <ul>\n            <li\n              className={\n                location.location.pathname !== \"/\" ? null : \"is-active\"\n              }\n            >\n              <NavLink to=\"/\">\n                <span className=\"icon is-small\">\n                  <i className=\"fas fa-image\" aria-hidden=\"true\"></i>\n                </span>\n                <span>Pictures</span>\n              </NavLink>\n            </li>\n            <li\n              className={\n                location.location.pathname !== \"/docs\" ? null : \"is-active\"\n              }\n            >\n              <NavLink to=\"/docs\">\n                <span className=\"icon is-small\">\n                  <i className=\"far fa-file-alt\" aria-hidden=\"true\"></i>\n                </span>\n                <span>Documents</span>\n              </NavLink>\n            </li>\n          </ul>\n        </div>\n        <Switch>\n          <Route exact path=\"/\" component={Image} />\n          <Route path=\"/docs\" component={Document} />\n          <Route component={NotFound} />\n        </Switch>\n      </div>\n      <Footer />\n    </section>\n  );\n};\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}